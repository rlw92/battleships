(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{o:()=>s,sq:()=>c});const t={createGrids:(e,t,n)=>{let r=document.createElement("div");r.style.padding="10px",r.style.border=0===n||0===t?"none":"solid black 2px",r.textContent=n,r.style.textAlign="center",0===n&&"0"===e?r.textContent=t:0===t&&"0"!=e&&(r.textContent=e),r.dataset.hit="No",r.dataset.hit,r.dataset.letter=e,r.dataset.number=t,r.classList.add("cell"),r.setAttribute("id",r.dataset.letter+r.dataset.number),document.getElementById("gameboard1").appendChild(r)},createGameboard:()=>{for(let e=0;e<11;e++)t.createGrids("0",0,e),t.createGrids("A",e),t.createGrids("B",e),t.createGrids("C",e),t.createGrids("D",e),t.createGrids("E",e),t.createGrids("F",e),t.createGrids("G",e),t.createGrids("H",e),t.createGrids("I",e),t.createGrids("J",e)}};function n(e,t,n,r){let o=[];if("V"===r){let r=11-n;t>r&&(t=r);for(let r=1;r<n+1;r++)o.push(e+t++)}else if("H"===r){let r=e.charCodeAt(0),l=107-n;r>l&&(r=l);for(let e=1;e<n+1;e++)o.push(String.fromCharCode(r++)+t)}return o}function r(e,t){this.name=e,this.coordinates=t}const o=function(e){e.target.style.backgroundColor="green";let t=e.target.dataset.number,n=e.target.dataset.letter;if("V"===s)for(let e=0;e<c;e++)document.getElementById(n+(+t+e)).style.backgroundColor="green";else if("H"===s){let e=n.charCodeAt(0);for(let n=0;n<c;n++)document.getElementById(String.fromCharCode(e++)+t).style.backgroundColor="green"}},l=function(e){e.target.style.backgroundColor="white";let t=e.target.dataset.number,n=e.target.dataset.letter;if("V"===s)for(let e=0;e<c;e++)document.getElementById(n+(+t+e)).style.backgroundColor="white";else if("H"===s){let e=n.charCodeAt(0);for(let n=0;n<c;n++)document.getElementById(String.fromCharCode(e++)+t).style.backgroundColor="white"}};let d=[],a=[];document.getElementById("p2c").textContent=a;let c,s="V",i=["player1","player2"],u=i[0];document.getElementById("pip").textContent=u,document.getElementById("Chnge").addEventListener("click",(()=>{"V"===s?(s="H",document.getElementById("position").textContent="Horizontal"):"H"===s&&(s="V",document.getElementById("position").textContent="Vertical")}));const m=()=>{document.getElementById("p1c").textContent=d,document.getElementById("p2c").textContent=a,u===i[0]?(u=i[1],document.getElementById("pip").textContent=u):(u=i[0],document.getElementById("pip").textContent=u)};function g(e){let t=d,n=e.target.dataset.letter+e.target.dataset.number;console.log(n),u===i[0]?t=a:u===i[1]&&(t=d);for(let e=0;e<t[0].length;e++)t[0][e]===n&&(alert("HIT"),t[0].splice(e,1),console.log(t[0]),console.log(d[0]),0===d[0].length?alert("Player two wins"):0===a[0].length&&alert("Player one wins"));return m(),t}function y(e){!function(e){e.target.style.backgroundColor="red";let t=new r("Gunner",n(e.target.dataset.letter,e.target.dataset.number,2,s));d.push(t),document.getElementById("p1c").textContent=d,m(),document.getElementById("p1c").textContent=d[0].name+"-"+d[0].coordinates}(e),function(){let e=document.querySelectorAll(".cell");for(let t=0;t<e.length;t++)e[t].removeEventListener("click",y),e[t].addEventListener("click",C)}()}function C(e){e.target.style.backgroundColor="red";let t=e.target.dataset.letter,r=e.target.dataset.number;a.push(n(t,r,2,s)),document.getElementById("p2c").textContent=a,m(),function(){let e=document.querySelectorAll(".cell");for(let t=0;t<e.length;t++)e[t].removeEventListener("click",C),e[t].removeEventListener("mouseover",o),e[t].removeEventListener("mouseleave",l)}(),function(){let e=document.querySelectorAll(".cell");for(let t=0;t<e.length;t++)e[t].addEventListener("click",g),e[t].style.backgroundColor="white",e[t].addEventListener("mouseover",(e=>{e.target.style.backgroundColor="red"})),e[t].addEventListener("mouseleave",(e=>{e.target.style.backgroundColor="white"}))}()}!function(){t.createGameboard();let e=document.querySelectorAll(".cell");c=5;for(let t=0;t<e.length;t++)e[t].addEventListener("click",y),e[t].addEventListener("mouseover",o),e[t].addEventListener("mouseleave",l)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,