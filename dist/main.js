(()=>{"use strict";var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{Rd:()=>p,o7:()=>u,P4:()=>g,VL:()=>c,yR:()=>i,w7:()=>m,sq:()=>s});const t={createGrids:(e,t,r)=>{let n=document.createElement("div");n.style.padding="10px",n.style.border=0===r||0===t?"none":"solid black 2px",n.textContent=r,n.style.textAlign="center",0===r&&"0"===e?n.textContent=t:0===t&&"0"!=e&&(n.textContent=e),n.dataset.hit="No",n.dataset.hit,n.dataset.letter=e,n.dataset.number=t,n.classList.add("cell"),n.setAttribute("id",n.dataset.letter+n.dataset.number),document.getElementById("gameboard1").appendChild(n)},createGameboard:()=>{for(let e=0;e<11;e++)t.createGrids("0",0,e),t.createGrids("A",e),t.createGrids("B",e),t.createGrids("C",e),t.createGrids("D",e),t.createGrids("E",e),t.createGrids("F",e),t.createGrids("G",e),t.createGrids("H",e),t.createGrids("I",e),t.createGrids("J",e)}};function r(e,t,r,n){let l=[];if("V"===n){let n=11-r;t>n&&(t=n);for(let n=1;n<r+1;n++)l.push(e+t++)}else if("H"===n){let n=e.charCodeAt(0),o=107-r;n>o&&(n=o);for(let e=1;e<r+1;e++)l.push(String.fromCharCode(n++)+t)}return l}function n(e,t){this.name=e,this.coordinates=t}const l=e=>{e.target.style.backgroundColor="red";let t,l=e.target.dataset.letter,o=e.target.dataset.number,a=new n("Carrier",r(l,o,2,u));g===m[0]?t=c:g===m[1]&&(t=i),t.push(a);let d=document.createElement("p");return d.textContent="Carrier-"+r(l,o,2,u),document.getElementById("p1c").appendChild(d),t},o=e=>{e.target.style.backgroundColor="red";let t,l=e.target.dataset.letter,o=e.target.dataset.number,a=new n("Battleship",r(l,o,3,u));g===m[0]?t=c:g===m[1]&&(t=i),t.push(a),p();let d=document.createElement("p");return d.textContent="BattleShip-"+r(l,o,3,u),document.getElementById("p1c").appendChild(d),t},a=function(e){e.target.style.backgroundColor="green";let t=e.target.dataset.number,r=e.target.dataset.letter;if("V"===u)for(let e=0;e<s;e++)document.getElementById(r+(+t+e)).style.backgroundColor="green";else if("H"===u){let e=r.charCodeAt(0);for(let r=0;r<s;r++)document.getElementById(String.fromCharCode(e++)+t).style.backgroundColor="green"}},d=function(e){e.target.style.backgroundColor="white";let t=e.target.dataset.number,r=e.target.dataset.letter;if("V"===u)for(let e=0;e<s;e++)document.getElementById(r+(+t+e)).style.backgroundColor="white";else if("H"===u){let e=r.charCodeAt(0);for(let r=0;r<s;r++)document.getElementById(String.fromCharCode(e++)+t).style.backgroundColor="white"}};let c=[],i=[];document.getElementById("p2c").textContent=i;let s,u="V",m=["player1","player2"],g=m[0];document.getElementById("pip").textContent=g,document.getElementById("Chnge").addEventListener("click",(()=>{"V"===u?(u="H",document.getElementById("position").textContent="Horizontal"):"H"===u&&(u="V",document.getElementById("position").textContent="Vertical")}));const p=()=>{document.getElementById("p2c").textContent=i,g===m[0]?(g=m[1],document.getElementById("pip").textContent=g):(m[1],g=m[0],document.getElementById("pip").textContent=g)};function y(e){let t=c,r=e.target.dataset.letter+e.target.dataset.number;console.log(r),g===m[0]?t=i:g===m[1]&&(t=c);for(let e=0;e<t[0].length;e++)t[0][e]===r&&(alert("HIT"),t[0].splice(e,1),console.log(t[0]),console.log(c[0]),0===c[0].length?alert("Player two wins"):0===i[0].length&&alert("Player one wins"));return p(),t}function C(){let e=document.querySelectorAll(".cell");for(let t=0;t<e.length;t++)s=2,e[t].removeEventListener("click",l),e[t].removeEventListener("click",C),e[t].addEventListener("click",h)}function h(e){e.target.style.backgroundColor="red";let t=e.target.dataset.letter,n=e.target.dataset.number;i.push(r(t,n,2,u)),document.getElementById("p2c").textContent=i,p(),function(){let e=document.querySelectorAll(".cell");for(let t=0;t<e.length;t++)e[t].removeEventListener("click",h),e[t].removeEventListener("mouseover",a),e[t].removeEventListener("mouseleave",d)}(),function(){let e=document.querySelectorAll(".cell");for(let t=0;t<e.length;t++)e[t].addEventListener("click",y),e[t].style.backgroundColor="white",e[t].addEventListener("mouseover",(e=>{e.target.style.backgroundColor="red"})),e[t].addEventListener("mouseleave",(e=>{e.target.style.backgroundColor="white"}))}()}const E={p1carrierShip:function(){t.createGameboard();let e=document.querySelectorAll(".cell");s=2;for(let t=0;t<e.length;t++)e[t].addEventListener("click",l),e[t].addEventListener("click",E.p1battleShip),e[t].addEventListener("mouseover",a),e[t].addEventListener("mouseleave",d)},p1battleShip:function(){let e=document.querySelectorAll(".cell");s=3;for(let t=0;t<e.length;t++)e[t].removeEventListener("click",l),e[t].removeEventListener("click",E.p1battleShip),e[t].addEventListener("click",o),e[t].addEventListener("click",C),e[t].addEventListener("mouseover",a),e[t].addEventListener("mouseleave",d)}};E.p1carrierShip()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,