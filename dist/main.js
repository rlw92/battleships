(()=>{"use strict";var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{o7:()=>h,P4:()=>E,VL:()=>g,yR:()=>p,w7:()=>v,sq:()=>m});const t={createGrids:(e,t,r)=>{let n=document.createElement("div");n.style.padding="10px",n.style.border=0===r||0===t?"none":"solid black 2px",n.textContent=r,n.style.textAlign="center",0===r&&"0"===e?n.textContent=t:0===t&&"0"!=e&&(n.textContent=e),n.dataset.hit="No",n.dataset.hit,n.dataset.letter=e,n.dataset.number=t,n.classList.add("cell"),n.setAttribute("id",n.dataset.letter+n.dataset.number),document.getElementById("gameboard1").appendChild(n)},createGameboard:()=>{for(let e=0;e<11;e++)t.createGrids("0",0,e),t.createGrids("A",e),t.createGrids("B",e),t.createGrids("C",e),t.createGrids("D",e),t.createGrids("E",e),t.createGrids("F",e),t.createGrids("G",e),t.createGrids("H",e),t.createGrids("I",e),t.createGrids("J",e)}};function r(e,t,r,n){let l=[];if("V"===n){let n=11-r;t>n&&(t=n);for(let n=1;n<r+1;n++)l.push(e+t++)}else if("H"===n){let n=e.charCodeAt(0),o=75-r;n>o&&(n=o),console.log(n),console.log(o);for(let e=1;e<r+1;e++)l.push(String.fromCharCode(n++)+t)}return l}function n(e,t){this.name=e,this.coordinates=t,this.hitShip=()=>{alert("You struck the "+e+" ship")},this.isSunk=()=>{0===t.length&&alert("You sunk the "+e+" ship")}}let l;const o=e=>{e.target.style.backgroundColor="red";let t,o=e.target.dataset.letter,a=e.target.dataset.number,c=new n("Carrier",r(o,a,2,h));E===v[0]?(t=g,l="p1c"):E===v[1]&&(t=p,l="p2c"),t.push(c);let d=document.createElement("p");return d.textContent="Carrier-"+r(o,a,2,h),document.getElementById(l).appendChild(d),t},a=e=>{e.target.style.backgroundColor="red";let t,o=e.target.dataset.letter,a=e.target.dataset.number,c=new n("Battleship",r(o,a,3,h));E===v[0]?(t=g,l="p1c"):E===v[1]&&(t=p,l="p2c"),t.push(c);let d=document.createElement("p");return d.textContent="BattleShip-"+r(o,a,3,h),document.getElementById(l).appendChild(d),t},c=e=>{e.target.style.backgroundColor="red";let t,o=e.target.dataset.letter,a=e.target.dataset.number,c=new n("Cruiser",r(o,a,4,h));E===v[0]?(t=g,l="p1c"):E===v[1]&&(t=p,l="p2c"),t.push(c);let d=document.createElement("p");return d.textContent="Cruiser-"+r(o,a,4,h),document.getElementById(l).appendChild(d),t},d=e=>{e.target.style.backgroundColor="red";let t,o=e.target.dataset.letter,a=e.target.dataset.number,c=new n("Submarine",r(o,a,5,h));E===v[0]?(t=g,l="p1c"):E===v[1]&&(t=p,l="p2c"),t.push(c);let d=document.createElement("p");return d.textContent="Submarine-"+r(o,a,5,h),document.getElementById(l).appendChild(d),t},i=e=>{e.target.style.backgroundColor="red";let t,o=e.target.dataset.letter,a=e.target.dataset.number,c=new n("Destroyer",r(o,a,6,h));E===v[0]?(t=g,l="p1c"):E===v[1]&&(t=p,l="p2c"),t.push(c);let d=document.createElement("p");return d.textContent="Destroyer-"+r(o,a,6,h),document.getElementById(l).appendChild(d),t},s=function(e){e.target.style.backgroundColor="green";let t=e.target.dataset.number,r=e.target.dataset.letter;if("V"===h)for(let e=0;e<m;e++)document.getElementById(r+(+t+e)).style.backgroundColor="green";else if("H"===h){let e=r.charCodeAt(0);for(let r=0;r<m;r++)document.getElementById(String.fromCharCode(e++)+t).style.backgroundColor="green"}},u=function(e){e.target.style.backgroundColor="white";let t=e.target.dataset.number,r=e.target.dataset.letter;if("V"===h)for(let e=0;e<m;e++)document.getElementById(r+(+t+e)).style.backgroundColor="white";else if("H"===h){let e=r.charCodeAt(0);for(let r=0;r<m;r++)document.getElementById(String.fromCharCode(e++)+t).style.backgroundColor="white"}};let m,g=[],p=[],h="V",v=["player1","player2"],E=v[0];document.getElementById("pip").textContent=E,document.getElementById("Chnge").addEventListener("click",(()=>{"V"===h?(h="H",document.getElementById("position").textContent="Horizontal"):"H"===h&&(h="V",document.getElementById("position").textContent="Vertical")}));const y=()=>{E===v[0]?(E=v[1],document.getElementById("pip").textContent=E):(v[1],E=v[0],document.getElementById("pip").textContent=E)};function C(e){console.log(e.target.dataset.letter);let t=g,r=e.target.dataset.letter+e.target.dataset.number;console.log(r),console.log(t.length),E===v[0]?t=p:E===v[1]&&(t=g);for(let e=0;e<t.length;e++)for(let n=0;n<t[e].coordinates.length;n++)t[e].coordinates[n]===r&&(console.log(t[e].coordinates),t[e].coordinates.splice(n,1),t[e].hitShip(),t[e].isSunk(),k(),console.log(t[e].coordinates),console.log("Player one sunk ships: 0"),console.log("Player two sunk ships: 0"));y()}function k(){console.log("UNDER CONSTRUCTIOn");let e,t=0,r=g;E===v[0]?(r=p,e="Player One"):E===v[1]&&(r=g,e="Player Two");for(let e=0;e<r.length;e++)0===r[e].coordinates.length&&++t;console.log(t),5===t&&alert(e+" has won!")}function b(){m=1,y();let e=document.querySelectorAll(".cell");for(let t=0;t<e.length;t++)e[t].removeEventListener("click",i),e[t].removeEventListener("click",b),e[t].style.backgroundColor="white";!function(){let e=document.querySelectorAll(".cell");for(let t=0;t<e.length;t++)e[t].addEventListener("click",C),e[t].style.backgroundColor="white",e[t].addEventListener("mouseover",(e=>{e.target.style.backgroundColor="red"})),e[t].addEventListener("mouseleave",(e=>{e.target.style.backgroundColor="white"}))}()}const f={p1carrierShip:function(){t.createGameboard();let e=document.querySelectorAll(".cell");m=2;for(let t=0;t<e.length;t++)e[t].addEventListener("click",o),e[t].addEventListener("click",f.p1battleShip),e[t].addEventListener("mouseover",s),e[t].addEventListener("mouseleave",u)},p1battleShip:function(){let e=document.querySelectorAll(".cell");m=3;for(let t=0;t<e.length;t++)e[t].removeEventListener("click",o),e[t].removeEventListener("click",f.p1battleShip),e[t].addEventListener("click",a),e[t].addEventListener("click",f.p1cruiserShip),e[t].addEventListener("mouseover",s),e[t].addEventListener("mouseleave",u)},p1cruiserShip:function(){let e=document.querySelectorAll(".cell");m=4;for(let t=0;t<e.length;t++)e[t].removeEventListener("click",a),e[t].removeEventListener("click",f.p1cruiserShip),e[t].addEventListener("click",c),e[t].addEventListener("click",f.p1submarineShip),e[t].addEventListener("mouseover",s),e[t].addEventListener("mouseleave",u)},p1submarineShip:function(){let e=document.querySelectorAll(".cell");m=5;for(let t=0;t<e.length;t++)e[t].removeEventListener("click",c),e[t].removeEventListener("click",f.p1submarineShip),e[t].addEventListener("click",d),e[t].addEventListener("click",f.p1destroyerShip),e[t].addEventListener("mouseover",s),e[t].addEventListener("mouseleave",u)},p1destroyerShip:function(){let e=document.querySelectorAll(".cell");m=6;for(let t=0;t<e.length;t++)e[t].removeEventListener("click",d),e[t].removeEventListener("click",f.p1destroyerShip),e[t].addEventListener("click",i),E===v[1]?e[t].addEventListener("click",b):E===v[0]&&e[t].addEventListener("click",f.loop),e[t].addEventListener("mouseover",s),e[t].addEventListener("mouseleave",u)},loop:function(){y();let e=document.querySelectorAll(".cell");for(let t=0;t<e.length;t++)e[t].removeEventListener("click",i),e[t].removeEventListener("click",f.loop),e[t].style.backgroundColor="white";f.p1carrierShip()}};f.p1carrierShip()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,